# This workflow will use Maven to build a package and then publish it to GitHub packages when a tag is pushed
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Release

on:
  push:
    branches: [ main ]

jobs:
  prepare:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Install libxkbcommon-x11
        run: sudo apt-get update && sudo apt-get install -y libxkbcommon-x11-0

      - name: Prepare release
        uses: GabrielBB/xvfb-action@v1
        with:
          run: |
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            mvn release:prepare -s settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Upload release.properties
        uses: actions/upload-artifact@v3
        with:
          name: release.properties
          path: release.properties
  perform:
    needs: [ prepare ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Download release.properties
        uses: actions/download-artifact@v3
        with:
          name: release.properties
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Install libxkbcommon-x11
        run: sudo apt-get update && sudo apt-get install -y libxkbcommon-x11-0

      - name: Prepare release
        uses: GabrielBB/xvfb-action@v1
        with:
          run: |
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            mvn release:perform -s settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Download release.properties for extraction
        uses: actions/download-artifact@v3
        with:
          name: release.properties

      - name: Extract tag
        id: extract_tag
        run: |
          TAG=$(grep 'scm.tag=' release.properties | cut -d= -f2)
          echo "steps_tag=$TAG" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.extract_tag.outputs.steps_tag }}
          release_name: Release ${{ steps.extract_tag.outputs.steps_tag }}
          draft: false
          prerelease: false
          
      - name: Create distribution package
        run: |
          cd target/checkout
          mkdir -p release-package/lib release-package/plugins
          
          # Copy main application jar
          cp target/fun-project.jar release-package/
          
          # Copy dependencies
          cp target/lib/* release-package/lib/
          
          # Copy plugin jars
          cp target/plugins/* release-package/plugins/
          
          # Create a complete distribution zip
          cd release-package
          zip -r ../fun-project-distribution.zip .
          cd ..
          
      - name: Upload Main Application JAR
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/checkout/target/fun-project.jar
          asset_name: fun-project.jar
          asset_content_type: application/java-archive
          
      - name: Upload Complete Distribution
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/checkout/fun-project-distribution.zip
          asset_name: fun-project-distribution.zip
          asset_content_type: application/zip