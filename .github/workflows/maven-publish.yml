# This workflow will use Maven to build a package and then publish it to GitHub packages when a tag is pushed
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Release

on:
  push:
    branches: [ main ]

jobs:
  prepare:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Prepare release
        uses: GabrielBB/xvfb-action@v1
        with:
          run: |
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            mvn release:prepare -s settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
      - name: Upload release.properties
        uses: actions/upload-artifact@v3
        with:
          name: release.properties
          path: release.properties
  perform:
    needs: [prepare]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Download release.properties
        uses: actions/download-artifact@v3
        with:
          name: release.properties
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Prepare release
        uses: GabrielBB/xvfb-action@v1
        with:
          run: |
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            mvn release:perform -s settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
      - name: Extract tag
        id: extract_tag
        run: |
          TAG=$(grep 'scm.tag=' release.properties | cut -d= -f2)
          echo "::set-output name=tag::$TAG"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.extract_tag.outputs.tag }}
          release_name: Release ${{ steps.extract_tag.outputs.tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./target/fun-project.jar
          asset_name: fun-project.jar
          asset_content_type: application/jar